@model EstagioGO.Models.Analise.ViewModels.AvaliacaoViewModel

@{
    ViewData["Title"] = "Nova Avaliação de Desempenho";
}

<div class="container mt-4">
    <form asp-action="Create" method="post">
        <div class="card shadow-sm">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="fas fa-clipboard-check me-2"></i>@ViewData["Title"]</h4>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-save me-1"></i>Salvar Avaliação</button>
                </div>
            </div>
            <div class="card-body">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="EstagiarioId" class="form-label fw-bold"></label>
                        <select asp-for="EstagiarioId" class="form-select" asp-items="ViewBag.Estagiarios">
                            <option value="">-- Selecione o Estagiário --</option>
                        </select>
                        <span asp-validation-for="EstagiarioId" class="text-danger"></span>
                    </div>
                </div>

                <hr />

                <h5 class="mt-4">Avaliação por Competências</h5>
                <p class="text-muted">Avalie cada competência de 0 a 5 (0 = Não atende, 5 = Excelente).</p>

                <div class="accordion" id="accordionCategorias">
                    @for (int i = 0; i < Model.Categorias.Count; i++)
                    {
                        var categoriaId = $"categoria-{i}";
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="heading-@categoriaId">
                                <button class="accordion-button @(i == 0 ? "" : "collapsed")" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@categoriaId">
                                    <strong>@Model.Categorias[i].Nome</strong>
                                </button>
                            </h2>
                            <div id="collapse-@categoriaId" class="accordion-collapse collapse @(i == 0 ? "show" : "")" data-bs-parent="#accordionCategorias">
                                <div class="accordion-body">
                                    <p class="text-muted fst-italic">@Model.Categorias[i].Descricao</p>
                                    <div class="table-responsive">
                                        <table class="table table-sm table-hover align-middle">
                                            <thead>
                                                <tr>
                                                    <th style="width: 50%;">Competência</th>
                                                    <th style="width: 20%;" class="text-center">Nota (0-5)</th>
                                                    <th style="width: 30%;">Comentário (Opcional)</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int j = 0; j < Model.Categorias[i].Competencias.Count; j++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Model.Categorias[i].Competencias[j].Descricao
                                                            <input type="hidden" asp-for="@Model.Categorias[i].CategoriaId" />
                                                            <input type="hidden" asp-for="@Model.Categorias[i].Competencias[j].CompetenciaId" />
                                                        </td>
                                                        <td class="text-center">
                                                            <input type="number" asp-for="@Model.Categorias[i].Competencias[j].Nota" class="form-control form-control-sm mx-auto" style="max-width: 80px;" min="0" max="5" />
                                                            <span asp-validation-for="@Model.Categorias[i].Competencias[j].Nota" class="text-danger"></span>
                                                        </td>
                                                        <td>
                                                            <input asp-for="@Model.Categorias[i].Competencias[j].Comentario" class="form-control form-control-sm" />
                                                            <span asp-validation-for="@Model.Categorias[i].Competencias[j].Comentario" class="text-danger"></span>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="form-group mt-4">
                    <label asp-for="ComentariosGerais" class="form-label fw-bold">Comentários Gerais e Plano de Desenvolvimento</label>
                    <textarea asp-for="ComentariosGerais" class="form-control" rows="4"></textarea>
                    <span asp-validation-for="ComentariosGerais" class="text-danger"></span>
                </div>
            </div>
            <div class="card-footer text-end">
                <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Cancelar</a>
                <button type="submit" class="btn btn-primary"><i class="fas fa-save me-1"></i>Salvar Avaliação</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form[action="/Avaliacao/Create"]');

            if (form) {
                form.addEventListener('submit', function (event) {
                    // Seleciona todos os inputs de nota
                    const notaInputs = form.querySelectorAll('input[type="number"][name$=".Nota"]');

                    if (notaInputs.length === 0) {
                        // Se não houver inputs de nota, não faz nada
                        return;
                    }

                    let zeroCount = 0;
                    notaInputs.forEach(input => {
                        if (parseInt(input.value, 10) === 0) {
                            zeroCount++;
                        }
                    });

                    // Define um limiar (ex: mais de 50% das notas são zero)
                    const threshold = notaInputs.length / 2;

                    if (zeroCount > threshold) {
                        // Se muitas notas são zero, pede confirmação
                        const userConfirmed = confirm('A maioria das competências está com nota 0. Deseja realmente submeter a avaliação com estes valores?');

                        if (!userConfirmed) {
                            // Se o usuário clicar em "Cancelar", impede o envio do formulário
                            event.preventDefault();
                        }
                        // Se o usuário clicar em "OK", o formulário é enviado normalmente.
                    }
                });
            }
        });
    </script>
}