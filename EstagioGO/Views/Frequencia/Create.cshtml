@model EstagioGO.Models.Domain.Frequencia

@{
    ViewData["Title"] = "Registrar Frequência";
    var isEstagiario = User.IsInRole("Estagiario");
}

<h1>Registrar Frequência</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="All" class="text-danger"></div>

            @if (isEstagiario)
            {
                <input type="hidden" asp-for="EstagiarioId" />
                <input type="hidden" asp-for="Presente" value="true" />
                <div class="form-group">
                    <label class="control-label">Estagiário</label>
                    <input class="form-control" value="@ViewBag.EstagiarioNome" readonly />
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="EstagiarioId" class="control-label"></label>
                    <select asp-for="EstagiarioId" class="form-control" asp-items="ViewBag.EstagiarioId"></select>
                    <span asp-validation-for="EstagiarioId" class="text-danger"></span>
                </div>

                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="Presente" /> @Html.DisplayNameFor(model => model.Presente)
                    </label>
                </div>
            }

            <div class="form-group">
                <label asp-for="Data" class="control-label"></label>
                <input asp-for="Data" class="form-control" type="date" max="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="Data" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="HoraEntrada" class="control-label"></label>
                <input asp-for="HoraEntrada" class="form-control" type="time" />
                <span asp-validation-for="HoraEntrada" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="HoraSaida" class="control-label"></label>
                <input asp-for="HoraSaida" class="form-control" type="time" />
                <span asp-validation-for="HoraSaida" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Observacao" class="control-label"></label>
                <input asp-for="Observacao" class="form-control" />
                <span asp-validation-for="Observacao" class="text-danger"></span>
            </div>

            @if (!isEstagiario)
            {
                <div class="form-group">
                    <label asp-for="JustificativaId" class="control-label"></label>
                    <select asp-for="JustificativaId" class="form-control" asp-items="ViewBag.JustificativaId">
                        <option value="">-- Selecione uma justificativa --</option>
                    </select>
                    <span asp-validation-for="JustificativaId" class="text-danger"></span>
                </div>
            }

            <div class="form-group mt-3">
                <input type="submit" value="Registrar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Validação cliente para hora de saída não ser anterior à hora de entrada
        document.querySelector('form').addEventListener('submit', function (e) {
            const horaEntrada = document.getElementById('HoraEntrada').value;
            const horaSaida = document.getElementById('HoraSaida').value;

            if (horaEntrada && horaSaida && horaEntrada > horaSaida) {
                e.preventDefault();
                alert('A hora de saída não pode ser anterior à hora de entrada.');
            }
        });
    </script>
}