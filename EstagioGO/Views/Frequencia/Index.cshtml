@model IEnumerable<EstagioGO.Models.Domain.Frequencia>

@{
    ViewData["Title"] = "Frequência";
}

<h2>Calendário de Frequência do Estagiário</h2>

<select id="estagiarioSelect" class="form-control mb-3" style="max-width:300px;">
    <option value="">Selecione um estagiário</option>
    @foreach (var estagiario in ViewBag.Estagiarios as List<EstagioGO.Models.Domain.Estagiario>)
    {
        <option value="@estagiario.Id">@estagiario.Nome</option>
    }
</select>

<div>
    <button id="btnCriar" class="btn btn-success" disabled>Criar Frequência</button>
    <button id="btnEditar" class="btn btn-primary" disabled>Editar Frequências</button>
</div>

<div id="calendar" class="mt-3"></div>

@section Scripts {
    <link href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.4/index.global.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.4/index.global.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var btnCriar = document.getElementById('btnCriar');
            var btnEditar = document.getElementById('btnEditar');
            var estagiarioSelect = document.getElementById('estagiarioSelect');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 600,
                events: [],
                eventDisplay: 'background'
            });

            calendar.render();

            estagiarioSelect.addEventListener('change', function () {
                var estagiarioId = this.value;
                calendar.removeAllEvents();

                // Ativa ou desativa os botões conforme seleção
                btnCriar.disabled = !estagiarioId;
                btnEditar.disabled = !estagiarioId;

                if (estagiarioId) {
                    fetch(`/Frequencia/GetFrequenciasParaCalendario?estagiarioId=${estagiarioId}`)
                        .then(response => response.json())
                        .then(data => {
                            const eventos = data.map(f => ({
                                start: f.date,
                                allDay: true,
                                display: 'background',
                                color: f.presente ? 'green' : 'red'
                            }));

                            eventos.forEach(evento => calendar.addEvent(evento));
                        });
                }
            });

            btnCriar.addEventListener('click', function () {
                var estagiarioId = estagiarioSelect.value;
                if (!estagiarioId) return alert('Selecione um estagiário primeiro.');

                // Redireciona para criar frequência já com EstagiarioId selecionado
                window.location.href = `/Frequencia/Create?estagiarioId=${estagiarioId}`;
            });

            btnEditar.addEventListener('click', function () {
                var estagiarioId = estagiarioSelect.value;
                if (!estagiarioId) return alert('Selecione um estagiário primeiro.');

                // Redireciona para a lista de frequências do estagiário para edição
                window.location.href = `/Frequencia/EditList?estagiarioId=${estagiarioId}`;
            });
        });
    </script>
}
